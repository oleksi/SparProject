@model SparWeb.Models.AccountTrainerViewModel

@{
	ViewBag.Title = String.Format("Spar with fighters of {0} from {1}, {2}", Model.Name, Model.City, Model.State);
	ViewBag.MetaDescription = String.Format("{0} from {1}, {2}; Phone Number: {3}; Website: {4}; Rate: {5}; Notes: {6}", Model.Name, Model.City, Model.State, Model.PhoneNumber, Model.Website, Model.Rate.ToString("C"), Model.Notes);
}

<div class="row account-info-section">
	<div class="col-md-1"></div>
	<div class="col-md-3">
		<div class="profilePictureDefaultTrainer @((Model.ProfilePictureUploaded == true)? "hidden" : "")">
		</div>
		<div class="title hidden-md hidden-lg">
			<span class="fighterNameSmall">@Html.ValueFor(m => m.Name)</span>
			<div class="row">
				<div class="col-md-12">
					from <span class="gymNameSmall">@Html.Raw(Util.GetGymLink(Model))</span>
					<br>
					<span>@Model.City, @Model.State</span>
				</div>
			</div>
		</div>
		<div class="profilePicture @((Model.ProfilePictureUploaded == false)? "hidden" : "")">
			<img height="250" src="@Model.ProfilePictureFile" class="img-responsive img-thumbnail" />
		</div>
	</div>
	<div class="col-md-6">
		@{Html.RenderPartial("TrainerAttributes", Model);}
	</div>
	<div class="col-md-2"></div>
</div>
<div class="row">
	<div class="col-md-offset-1 col-md-9 accountNotes">
		@Html.Raw(Model.GetHtmlFormattedNotes())
	</div>
</div>

@if (Model.FightersList.Count > 0)
{
	<div class="row">
		<div class="col-md-1"></div>
		<div class="col-md-9">
			<h2>@Model.Name Fighters:</h2>
		</div>
		<div class="col-md-2"></div>
	</div>
	<div class="trainer-fighters-list row">
		<div class="col-md-offset-1 col-md-9">
			@foreach (var fighterViewModel in Model.FightersList)
			{
				@Html.Partial("SparFighter", fighterViewModel)
			}
		</div>
	</div>
}
