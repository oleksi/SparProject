@model SparWeb.Models.AccountViewModel

<div class="well well-sm spar-fighter">
    <div class="col-md-3 vAlignCenter">
        <div class="profilePicture">
            <img height="150" src="@Model.ProfilePictureFile" />
        </div>
    </div>
    <div class="col-md-6 vAlignCenter">
        <span class="fighterNameSmall">@Html.ValueFor(m => m.Name)</span>
        <div class="row">
            <div class="col-md-12">
                from <span class="gymNameSmall">@Html.ValueFor(m => m.GymName)</span>
                <br />
                <span>@Model.City, @Model.State</span>
            </div>
        </div>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Age):
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Age)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Height):
            </dt>

            <dd>
                @Util.HeightToCentimetersMap[Model.Height]
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Weight):
            </dt>

            <dd>
                @Util.WeightClassShortMap[Model.Weight]
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsSouthpaw):
            </dt>

            <dd>
                @((Model.IsSouthpaw)? "Left-Handed" : "Right-Handed")
            </dd>

            <dt>
                Number of fights :
            </dt>

            <dd>
                @Html.DisplayFor(model => model.NumberOfAmateurFights) amateur
                @if (Model.NumberOfProFights > 0)
                {
                    @:/ <strong>@Html.DisplayFor(model => model.NumberOfProFights) pro</strong>
                }
            </dd>
        </dl>
    </div>
    <div class="col-md-2 vAlignCenter sparFighterCTA">
        @if (Model.SparRequests.Count == 0 || Model.SparRequests.Any(sr => (sr.SparRequesStatus == SparModel.SparRequestStatus.Requested || sr.SparRequesStatus == SparModel.SparRequestStatus.DateLocationNegotiation || sr.SparRequesStatus == SparModel.SparRequestStatus.Confirmed)) == false)
        { 
        @Html.ActionLink("Spar " + Model.HimOrHer, "SparConfirmation", "Spar", new { ID = Model.ID }, new { @class = "btn btn-default btn-danger btn-lg" } )
        }
        else
        {
            if (Model.SparRequests[0].SparRequesStatus == SparModel.SparRequestStatus.Confirmed)
            { 
            <small>Spar is scheduled for <b>@Model.SparRequests[0].SparDate.Value.ToString("dddd, MMMM d, yyyy") at @Model.SparRequests[0].SparTime</b></small>
            }
            else if (Model.SparRequests[0].SparRequesStatus == SparModel.SparRequestStatus.DateLocationNegotiation || Model.SparRequests[0].SparRequesStatus == SparModel.SparRequestStatus.Requested)
            {
            <small>A spar negotiation is in progress</small>
            }
            <br />
            @Html.ActionLink("View Details", "SparDetailsConfirmation", "Spar", new System.Web.Routing.RouteValueDictionary() { { "ID", Model.SparRequests[0].SparRequestId } }, null)
        }
    </div>
</div>

