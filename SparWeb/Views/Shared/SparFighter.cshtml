@model SparWeb.Models.AccountFighterViewModel

<div class="row well well-sm spar-fighter">
    <div class="col-md-3 vAlignCenter">
		@if (Model.IsTrainerView == false)
		{ 
        <div class="title hidden-md hidden-lg hidden-sm">
            <span class="fighterNameSmall"><a href="@Model.FighterUrl">@Html.ValueFor(m => m.Name)</a></span>
            <div class="row">
                <div class="col-md-12">
                    from <span class="gymNameSmall">@Html.ValueFor(m => m.GymName)</span>
                    <br>
                    <span>@Model.City, @Model.State</span>
                </div>
            </div>
        </div>
        <div class="profilePicture">
            <a href="@Model.FighterUrl"><img src="@Model.ProfilePictureFile" height="150"></a>
        </div>
		}
		else
		{
			Html.RenderPartial("ProfilePicture", Model);
		}
    </div>
    <div class="col-md-6 vAlignCenter">
        <span class="fighterNameSmall hidden-xs"><a href="@Model.FighterUrl">@Html.ValueFor(m => m.Name)</a></span>
        <div class="row hidden-xs">
            <div class="col-md-12">
                from <span class="gymNameSmall">@Html.ValueFor(m => m.GymName)</span>
                <br>
                <span>@Model.City, @Model.State</span>
            </div>
        </div>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Age)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Age)
            </dd>
            <div class="clear;both"></div>
            <dt>
                @Html.DisplayNameFor(model => model.Height)
            </dt>

            <dd>
                @Util.HeightToCentimetersMap[Model.Height]
            </dd>
            <div class="clear;both"></div>
            <dt>
                @Html.DisplayNameFor(model => model.Weight)
            </dt>

            <dd>
                @Util.WeightClassShortMap[Model.Weight]
            </dd>
            <div class="clear;both"></div>
            <dt>
                @Html.DisplayNameFor(model => model.IsSouthpaw)
            </dt>

            <dd>
                @((Model.IsSouthpaw) ? "Left-Handed" : "Right-Handed")
            </dd>
            <div class="clear;both"></div>
            <dt>
                Number of fights :
            </dt>

            <dd>
                @Html.DisplayFor(model => model.NumberOfAmateurFights) amateur
                @if (Model.NumberOfProFights > 0)
                {
                    @:/ <strong>@Html.DisplayFor(model => model.NumberOfProFights) pro</strong>
                }
            </dd>
        </dl>
    </div>
    <div class="col-md-2 col-xs-12 vAlignCenter sparFighterCTA">
		@if (Model.IsTrainerView == true)
		{
			<div class="update-fighter-profile-info">
				<p class="text-right"><a href="#" data-userid="@Model.ID">Update Profile</a></p>
			</div>
		}
		else if (Model.IsFighterSelectView == true)
		{
			<a class="btn btn-default btn-danger btn-lg selectFighterButton" data-fighterid="@Model.ID" href="#">Select</a>
		}
		else if (Model.IsWidgetView == false)
		{
			Html.RenderPartial("SparButton", Model);
		}
    </div>
</div>