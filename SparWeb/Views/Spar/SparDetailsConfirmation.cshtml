@model SparWeb.Models.ConfirmSparDetailsViewModel

@{
    ViewBag.Title = "Spar Confirmation Details";
}

@section head {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/css/bootstrap-datepicker")
    @Scripts.Render("~/bundles/bootstrap-datepicker")
}

<div class="row text-center">
    @if (Model.SparRequesStatus == SparModel.SparRequestStatus.Requested && Model.IsThisFighterLastNegotiator() == false)
    { 
        <h2 class="sparDetailsStatus">Please select Date and Location for the following spar:</h2>
    }
    else if (Model.SparRequesStatus == SparModel.SparRequestStatus.Requested && Model.IsThisFighterLastNegotiator() == true)
    {
        <h2 class="sparDetailsStatus">The spar request is already sent. Please wait for response ...</h2>
    }
    else if (Model.SparRequesStatus == SparModel.SparRequestStatus.DateLocationNegotiation)
    {
        <h2 class="sparDetailsStatus">@Model.OpponentFighter.Name agreed to spar you! Please confirm or propose a change ...</h2>
    }
    else if (Model.SparRequesStatus == SparModel.SparRequestStatus.Confirmed)
    {
        <h2 class="sparDetailsStatus">A spar with @Model.OpponentFighter.Name has been confirmed ...</h2>
    }
    else if (Model.SparRequesStatus == SparModel.SparRequestStatus.Canceled)
    {
        <h2 class="sparDetailsStatus">This spar with @Model.OpponentFighter.Name has been cancelled ...</h2>
    }
</div>

<div class="sparConfirmationInstructionRow">
    <form id="formSparDetails" method="post" action="@Url.Action("ChangeSparDetails", "Spar")" class="form-horizontal">
        @Html.HiddenFor(m => m.SparRequestId)
        @Html.HiddenFor(m => m.SparRequesStatus)

        @{Html.RenderPartial("SparConfirmationInfo", Model);}

        <div id="sparDetailsEdit" class="hidden">
            <div class="row sparConfirmationSectionRow">
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SparDate, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            <div class="inner-addon left-addon">
                                <i class="glyphicon glyphicon-calendar"></i>
                                @Html.TextBoxFor(m => m.SparDate, "{0:MM/dd/yyyy}", new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SparDate) })
                                @Html.ValidationMessageFor(m => m.SparDate, null, new { @class = "pull-left" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3"></div>
            </div>

            <div class="row sparConfirmationRow">
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SparTime, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.EditorFor(m => m.SparTime, "SparTime")
                            @Html.ValidationMessageFor(m => m.SparTime)
                        </div>
                    </div>
                </div>
                <div class="col-md-3"></div>
            </div>

            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-md-3 control-label">Location</label>
                        <div class="col-md-9">
                            @if (Model.ThisFighter.Gym != null && Model.OpponentFighter.Gym != null && Model.ThisFighter.Gym.Id != Model.OpponentFighter.Gym.Id)
                            {
                                <div class="radio">
                                    <label>
                                        @Html.RadioButtonFor(m => m.SparGymID, Model.ThisFighter.Gym.Id )
                                        <b>Your gym</b> (@Model.ThisFighter.Gym.Name)
                                    </label>
                                </div>
                                <div class="radio">
                                    <label>
                                        @Html.RadioButtonFor(m => m.SparGymID, Model.OpponentFighter.Gym.Id)
                                        <b>@Model.OpponentFighter.Name's gym</b> (@Model.OpponentFighter.Gym.Name)
                                    </label>
                                </div>
                            }
                            else if ((Model.ThisFighter.Gym != null && Model.OpponentFighter.Gym != null && Model.ThisFighter.Gym.Id == Model.OpponentFighter.Gym.Id) || (Model.ThisFighter.Gym != null && Model.OpponentFighter.Gym == null))
                            {
                                <div class="radio">
                                    <label>
                                        @Html.RadioButtonFor(m => m.SparGymID, Model.ThisFighter.Gym.Id)
                                        <b>Your gym</b> (@Model.ThisFighter.Gym.Name)
                                    </label>
                                </div>
                            }
                            else if (Model.OpponentFighter.Gym != null && Model.ThisFighter.Gym == null)
                            {
                                <div class="radio">
                                    <label>
                                        @Html.RadioButtonFor(m => m.SparGymID, Model.OpponentFighter.Gym.Id)
                                        <b>@Model.OpponentFighter.Name's gym</b> (@Model.OpponentFighter.Gym.Name)
                                    </label>
                                </div>
                            }
                            <div class="radio">
                                <label>
                                    @Html.RadioButtonFor(m => m.SparGymID, 0)
                                    <b>Other place</b> (please specify in the notes)
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3"></div>
            </div>

            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SparNotes, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            <div class="inner-addon left-addon">
                                @Html.TextAreaFor(m => m.SparNotes, 3, 4, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SparNotes) })
                                @Html.ValidationMessageFor(m => m.SparNotes)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3"></div>
            </div>

            <div class="row sparConfirmationSectionRow">
                <div class="col-md-4"></div>
                <div class="col-md-1">
                @if (Model.SparRequesStatus != SparModel.SparRequestStatus.Requested)
                {
                    <input type="button" class="btn btn-default btn-lg" value="Cancel" onclick="return showSparDetailsInfo();" />
                }
                else
                {
                    @Html.ActionLink("Cancel", "Index", "Account", null, new { @class = "btn btn-default btn-lg" })
                }                 
                </div>
                <div class="col-md-3">
                    <input type="submit" onclick="return submitSparDetails('DateLocationNegotiation');" value="Respond to Spar Request" class="btn btn-default btn-danger btn-lg" />
                </div>
                <div class="col-md-4"></div>
            </div>
        </div>

        @if (Model.SparRequesStatus != SparModel.SparRequestStatus.Requested)
        { 
        <div id="sparDetailsInfo" class="hidden">
            @{ Html.RenderPartial("SparInformationInfoBox", Model); }

            <div class="row">
                <div class="col-md-4"></div>
        @if (Model.SparRequesStatus == SparModel.SparRequestStatus.DateLocationNegotiation)
        { 
                <div class="col-md-2">
                    <input type="button" class="btn btn-default btn-lg" value="Change Details" onclick="showSparDetailsEdit();" />
                </div>
                <div class="col-md-2">
                    <input type="button" onclick="return submitSparDetails('Confirmed');" value="Confirm Spar" class="btn btn-default btn-danger btn-lg" />
                </div>
        }
        else if (Model.SparRequesStatus == SparModel.SparRequestStatus.Confirmed)
        {
                <div class="col-md-4 text-center">
                    <input type="button" onclick="$('#confirmCancelSparyModal').modal('show');" value="Cancel Spar" class="btn btn-default btn-danger btn-lg" />
                </div>
        }
        <div class="col-md-4"></div>
    </div>
        </div>
        }

        <div id="confirmCancelSparyModal" class="modal fade">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title">Cancel Spar Confirmation</h4>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to cancel spar with @Model.OpponentFighter.Name?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" onclick="return submitSparDetails('Canceled');" class="btn btn-primary">Cancel Spar</button>
                    </div>
                </div>
            </div>
        </div>

    </form>
</div>

    @section scripts {
        <script>
    $(function () {
        $('#SparDate').datepicker();
        $('#SparDate').on('changeDate', function (ev) {
            $(this).datepicker('hide');
        });

        $('#formSparDetails').validate();

        @if ((Model.SparRequesStatus == SparModel.SparRequestStatus.Requested && Model.IsThisFighterLastNegotiator() == false)
            || (Model.SparRequesStatus == SparModel.SparRequestStatus.DateLocationNegotiation && Model.IsThisFighterLastNegotiator() == true))
        {
        @:showSparDetailsEdit();
        }
        else
        {
        @:showSparDetailsInfo();
        }
    });

    function submitSparDetails(sparRequestStatus) {

        if ($('#formSparDetails').valid() == false) {
            $('#SparDate').datepicker('hide');
            return false;
        }
        else {
            $('#SparRequesStatus').val(sparRequestStatus);

            $('#formSparDetails').submit();
        }

        return true;
    }

    function showSparDetailsInfo() {
        $('#sparDetailsInfo').removeClass('hidden');
        $('#sparDetailsEdit').addClass('hidden');
    }

    function showSparDetailsEdit() {
        $('#sparDetailsEdit').removeClass('hidden');
        $('#sparDetailsInfo').addClass('hidden');
    }

    </script>
    }
