@model SparWeb.Models.AccountFighterViewModel

@{
    ViewBag.Title = "Account Summary";
}

<div class="row account-info-section">
    <div class="col-md-1"></div>
    <div class="col-md-3 profilePictureSection">
		@{Html.RenderPartial("ProfilePicture", Model);}
    </div>
    <div class="col-md-6">
        <div class="title hidden-xs hidden-sm">
            <span class="fighterNameSmall">@Html.ValueFor(m => m.Name)</span>
            <div class="row">
                <div class="col-md-12">
                    from <span class="gymNameSmall">@Html.ValueFor(m => m.GymName)</span>
                    <br />
                    <span>@Model.City, @Model.State</span>
                </div>
            </div>
        </div>
            <div class="well top-buffer">
                <div class="row">
                    <div class="col-sm-4 col-xs-4">
                        @Html.LabelFor(m => m.Age)
                    </div>
                    <div class="col-sm-8 col-xs-8">
                        @Html.ValueFor(m => m.Age)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4 col-xs-4">
                        @Html.LabelFor(m => m.Height)
                    </div>
                    <div class="col-sm-8 col-xs-8">
                        @ViewBag.HeightToCentimetersMap[Model.Height]
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4 col-xs-4">
                        @Html.LabelFor(m => m.Weight)
                    </div>
                    <div class="col-sm-8 col-xs-8">
                        @ViewBag.WeightClassMap[Model.Weight]
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4 col-xs-4">
                        @Html.LabelFor(m => m.IsSouthpaw)
                    </div>
                    <div class="col-sm-8 col-xs-8">
                        @((Model.IsSouthpaw) ? "Left-Handed" : "Right-Handed")
                    </div>
                </div>            
                <div class="row">
                    <div class="col-sm-4 col-xs-4">
                        <label for="NumberOfAmateurFights">Number of fights:</label>
                    </div>
                    <div class="col-sm-8 col-xs-8">
                        @Html.DisplayFor(model => model.NumberOfAmateurFights) amateur
                        @if (Model.NumberOfProFights > 0)
                        {
                            @:/ <strong>@Html.DisplayFor(model => model.NumberOfProFights) pro</strong>
                    }
                    </div>
                </div>
            </div>
            <div class="update-profile-info">
                <p class="text-right"><a href="#">Update Profile</a></p>
            </div>
        </div>
    <div class="col-md-2"></div>
</div>
<div class="row">
    <div class="col-md-12">
        <p class="text-center">
            <a class="btn btn-success btn-lg col-xs-12 col-sm-3 col-sm-offset-4" href="@Url.Content("~/")">Find Spar Partners »</a>
        </p>
    </div>
</div>
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-9">
        <h2>Upcoming Spars:</h2>
    </div>
    <div class="col-md-2"></div>
</div>
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-9 upcomingSpars">
        @if (Model.SparRequests.Count > 0 && Model.SparRequests.Any(sr => sr.SparRequesStatus == SparModel.SparRequestStatus.Confirmed || sr.SparRequesStatus == SparModel.SparRequestStatus.DateLocationNegotiation) == true)
        {
            foreach (SparWeb.Models.ConfirmSparDetailsViewModel currSparRequest in Model.SparRequests)
            {
                if (currSparRequest.SparRequesStatus == SparModel.SparRequestStatus.Confirmed || currSparRequest.SparRequesStatus == SparModel.SparRequestStatus.DateLocationNegotiation)
                {
                    <div data-saprrequestid="@currSparRequest.SparRequestId">
                        <div class="row well well-sm spar-fighter">
                            <div class="col-md-3 vAlignCenter">
                                <div class="title hidden-md hidden-lg hidden-sm">
                                    <span class="fighterNameSmall">@currSparRequest.OpponentFighter.Name</span>
                                    <div class="row">
                                        <div class="col-md-12">
                                            from <span class="gymNameSmall">@((currSparRequest.OpponentFighter.Gym != null) ? currSparRequest.OpponentFighter.Gym.Name : "Unknown Gym")</span>
                                            <br/>
                                            @currSparRequest.OpponentFighter.City, @currSparRequest.OpponentFighter.State
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <img height="@currSparRequest.ProfilePictureSize" src="@Util.GetProfilePictureFile(currSparRequest.OpponentFighter, currSparRequest.ProfilePictureSize)" class="img-responsive" />
                                </div>
                            </div>
                            <div class="col-md-6 hidden-xs vAlignCenter">
                                <span class="fighterNameSmall hidden-xs">@currSparRequest.OpponentFighter.Name</span>
                                <div class="row hidden-xs">
                                    <div class="col-md-12 hidden-xs">
                                        from <span class="gymNameSmall hidden-xs">@((currSparRequest.OpponentFighter.Gym != null) ? currSparRequest.OpponentFighter.Gym.Name : "Unknown Gym")</span>
                                        <br />
                                        @currSparRequest.OpponentFighter.City, @currSparRequest.OpponentFighter.State
                                    </div>
                                </div>
                                <br class="hidden-xs" />
                                @{ Html.RenderPartial("SparInformation", currSparRequest); }
                            </div>
                            @if (currSparRequest.SparRequesStatus == SparModel.SparRequestStatus.Confirmed)
                            {
                                <div class="col-md-3 col-lg-2 col-xs-12 left-space vAlignCenter">
                                    <input type="button" value="Cancel Spar" class="btn btn-default btn-danger btn-lg col-xs-12 col-sm-12" onclick="confirmCancelSpar('@currSparRequest.OpponentFighter.Name', '@currSparRequest.SparRequestId');" />
                                </div>
                            }
                            else if (currSparRequest.SparRequesStatus == SparModel.SparRequestStatus.DateLocationNegotiation)
                            {
                                <div class="col-md-2 vAlignCenter">
                                    <small>A spar negotiation is in progress</small>
                                    <br />
                                    @Html.ActionLink("View Details", "SparDetailsConfirmation", "Spar", new System.Web.Routing.RouteValueDictionary() { { "ID", currSparRequest.SparRequestId } }, null)
                                </div>
                            }
                        </div>
                    </div>
                }
            }
        }
        else
        {
            <p>You have no spars scheduled at this time</p>
        }
    </div>
    <div class="col-md-2"></div>
</div>
<div id="confirmCancelSparyModal" class="modal fade">
    <input type="hidden" name="cancelSparRequestId" id="cancelSparRequestId" />
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Cancel Spar Confirmation</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to cancel spar with <span></span> </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" onclick="doCancelSpar();" class="btn btn-primary">Cancel Spar</button>
            </div>
        </div>
    </div>
</div>

<div id="updateProfileModel" class="modal fade">
    <div class="modal-dialog">
        @Html.BeginForm("UpdateFighterProfileInfo", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" })
        @Html.HiddenFor(m => m.Name)
        @Html.HiddenFor(m => m.ProfilePictureUploaded)
        @Html.HiddenFor(m => m.ProfilePictureFile)
        @Html.HiddenFor(m => m.Age)
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Update Profile Information</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    @Html.LabelFor(m => m.City, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.City) })
                        @Html.ValidationMessageFor(m => m.City)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.State, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-12">
                                @Html.DropDownListFor(m => m.State, (new SelectList(ViewBag.States, "Key", "Value", Model.State)), "Please select", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                @Html.ValidationMessageFor(m => m.State)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.GymName, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.GymName, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.GymName) + " (optional)" })
                        @Html.ValidationMessageFor(m => m.GymName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Height, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-12">
                                @Html.DropDownListFor(m => m.Height, (new SelectList(ViewBag.HeightToCentimetersMap, "Key", "Value", Model.Height)), "Please select", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                @Html.ValidationMessageFor(m => m.Height)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Weight, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.Weight, (new SelectList(ViewBag.WeightClassMap, "Key", "Value", Model.Weight)), "Please select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Weight)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.IsSouthpaw, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(m => m.IsSouthpaw, "IsSouthpaw")
                        @Html.ValidationMessageFor(m => m.IsSouthpaw)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label" for="NumberOfAmateurFights">Number of fights:</label>
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="col-md-6">
                                        @Html.LabelFor(m => m.NumberOfAmateurFights) @Html.TextBoxFor(m => m.NumberOfAmateurFights, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.NumberOfAmateurFights) })
                                    </div>
                                    <div class="col-md-6">
                                        @Html.LabelFor(m => m.NumberOfProFights)  @Html.TextBoxFor(m => m.NumberOfProFights, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.NumberOfProFights) })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">@Html.ValidationMessageFor(m => m.NumberOfAmateurFights)</div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">@Html.ValidationMessageFor(m => m.NumberOfProFights)</div>
                        </div>
                    </div>
                </div>               
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save changes</button>
            </div>
            @{Html.EndForm();}
        </div>
    </div>
</div>

    @section scripts{
        <script type="text/javascript">
    //Dropzone.autoDiscover = false;
    $(function () {
        $('.update-profile-info').find('a').click(function () {
            $('#updateProfileModel').addClass('fade');
            $('#updateProfileModel').modal('show');
        });
        
        @if (ViewBag.ShowUpdateProfileModal != null)
        {
            <text>
            $('#updateProfileModel').removeClass('fade');
            $('#updateProfileModel').modal('show');
            </text>
        }
    });

    function confirmCancelSpar(opponentFighterName, sparRequestId) {
        $('#confirmCancelSparyModal').find('p').find('span').text(opponentFighterName);
        $('#cancelSparRequestId').val(sparRequestId);
        $('#confirmCancelSparyModal').modal('show');
    }

    function doCancelSpar() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("CancelSpar", "Spar")',
            data: { sparRequestId: $('#cancelSparRequestId').val() },
            success: function (data) {
                $('.upcomingSpars').find('.container[data-saprRequestId="' + $('#cancelSparRequestId').val() + '"]').remove();
                $('#cancelSparRequestId').val('');
                $('#confirmCancelSparyModal').modal('hide');
            }
        });
    }
        </script>
    }
