@model SparWeb.Models.HomeViewModel

@{
	ViewBag.Title = "Find Sparring Partner in Boxing, MMA and other combat sports";     
}

@*<div class="jumbotron">
    <h1>SparGym</h1>
    <h2>Find boxing sparring partner in New York</h2>
    <p class="lead">SparGym is the ultimate resource for finding boxing sparring partners in New York. Register now to become a part of our boxing community and to schedule your next spar!</p>
    <p><a href="@Url.Content("~/Account/Register")" class="btn btn-primary btn-lg">Register &raquo;</a></p>
</div>*@

@if (Request.IsAuthenticated == false)
{
    <div class="panel">
        <div id="myCarousel" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
                <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                <li data-target="#myCarousel" data-slide-to="1"></li>
            </ol>
            <!-- Carousel items -->
            <div class="carousel-inner">
                <div class="item active">
					<img alt="SparGym - find spar partner in Boxing, MMA and other combat sports" src="~/Content/Images/spargym-header-1.jpg">
                    <div class="carousel-caption">
						<h4>SparGym connects sparring partners of any level!</h4>
						<p>No matter if you are beginner or experienced fighter, you will find the right sparring partner by location, age, gender, weight, height, stance and experience level. Register today to schedule your next spar!</p>
						<p><a href="@Url.Content("~/Account/Register")" class="btn btn-success btn-lg">Register &raquo;</a></p>
                    </div>
                </div>
                <div class="item">
					<img alt="SparGym - find boxing spar partner in Boxing, MMA and other combat sports" src="~/Content/Images/spargym-header-2.jpg">
                    <div class="carousel-caption">
						<h4>Sparring is where fighters make the most progress!</h4>
						<p>No matter how hard you hit the bag, you must apply what you learn through live sparring. Join SparGym today to find your next sparring partner!</p>
						<p><a href="@Url.Content("~/Account/Register")" class="btn btn-success btn-lg">Register &raquo;</a></p>
                    </div>
                </div>
            </div>
            <!-- Controls -->
            <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-4">
        <div class="well" id="search-filters">
            <h3>Search fighters by:</h3>
            @using (Html.BeginForm("Index", "Home", FormMethod.Get))
			{
				<div class="form-group">
					@Html.LabelFor(m => m.State, new { @class = "control-label" })
					@if (String.IsNullOrEmpty(Model.State) == true)
					{
						@Html.DropDownListFor(m => m.State, (new SelectList(ViewBag.States, "Key", "Value", Model.State)), "Please select location", new { @class = "form-control" })
					}
					else
					{
						@Html.HiddenFor(m => m.State)
						@Html.DropDownListFor(m => m.State, (new SelectList(ViewBag.States, "Key", "Value", Model.State)), "Please select location", new { @class = "form-control", disabled = "disabled" })
						<p><a href="#" class="pull-right clearFilter">Clear</a></p>
					}
				</div>
                <div class="form-group">
                    @Html.LabelFor(m => m.AgeRange, new { @class = "control-label" })
                    @if (Model.AgeRange == 0)
                    {
                        @Html.DropDownListFor(m => m.AgeRange, (new SelectList(ViewBag.AgeRange, "Key", "Value", Model.Height)), "Please select", new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.AgeRange)
                        @Html.DropDownListFor(m => m.AgeRange, (new SelectList(ViewBag.AgeRange, "Key", "Value", Model.Height)), "Please select", new { @class = "form-control", disabled = "disabled" })
                        <p><a href="#" class="pull-right clearFilter">Clear</a></p>
                    }
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Weight, new { @class = "control-label" })
                    @if (Model.Weight == 0)
                    {
                        @Html.DropDownListFor(m => m.Weight, (new SelectList(ViewBag.WeightClassMap, "Key", "Value", Model.Weight)), "Please select", new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.Weight)
                        @Html.DropDownListFor(m => m.Weight, (new SelectList(ViewBag.WeightClassMap, "Key", "Value", Model.Weight)), "Please select", new { @class = "form-control", disabled = "disabled" })
                        <p><a href="#" class="pull-right clearFilter">Clear</a></p>
                    }
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Height, new { @class = "control-label" })
                    @if (Model.Height == 0)
                    {
                        @Html.DropDownListFor(m => m.Height, (new SelectList(ViewBag.HeightToCentimetersMap, "Key", "Value", Model.Height)), "Please select", new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.Height)
                        @Html.DropDownListFor(m => m.Height, (new SelectList(ViewBag.HeightToCentimetersMap, "Key", "Value", Model.Height)), "Please select", new { @class = "form-control", disabled = "disabled" })
                        <p><a href="#" class="pull-right clearFilter">Clear</a></p>
                    }
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Southpaw, new { @class = "control-label" })
                    <div class="radioButtonFilter">
                        @Html.EditorFor(m => m.Southpaw, "IsSouthpaw")
                        @if (Model.Southpaw != null)
                        {
                            <span><a href="#" class="pull-right clearFilter">Clear</a></span>
                        }
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.NumberOfFights, new { @class = "control-label" })
                    @if (Model.NumberOfFights == 0)
                    {
                        @Html.DropDownListFor(m => m.NumberOfFights, (new SelectList(ViewBag.NumberOfFights, "Key", "Value", Model.NumberOfFights)), "Please select", new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.NumberOfFights)
                        @Html.DropDownListFor(m => m.NumberOfFights, (new SelectList(ViewBag.NumberOfFights, "Key", "Value", Model.NumberOfFights)), "Please select", new { @class = "form-control", disabled = "disabled" })
                        <p><a href="#" class="pull-right clearFilter">Clear</a></p>
                    }
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Male, new { @class = "control-label" })
                    <div class="radioButtonFilter">
                        @Html.EditorFor(m => m.Male, "Sex")
                        @if (Model.Male != null)
                        {
                            <span><a href="#" class="pull-right clearFilter">Clear</a></span>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="col-md-8">
        @if (Model.FightersList.Count > 0)
        {                         
            foreach (var currModel in Model.FightersList)
            {
                @Html.Partial("SparFighter", currModel)
            }
            
            if (Model.PagesCount > 1)
            {
                <div class="row">
                    <div class="col-md-12 text-center">
                        <ul class="pagination">
                            @if (Model.PageNumber > 1)
                            {
                                <li><a href="@(Url.Action("Index", new { page = Model.PageNumber - 1}) + Model.FilterParamsQueryString)">&laquo;</a></li>
                            }
                            
                            @for (int i = 1; i <= Model.PagesCount; i++)
                            {
                                if (i != Model.PageNumber)
                                {
                                    <li><a href="@(Url.Action("Index", new { page = i }) + Model.FilterParamsQueryString)">@i</a></li>
                                }
                                else
                                {
                                    <li class="active"><a href="#">@i</a></li>
                                }
                            }

                            @if (Model.PageNumber < Model.PagesCount)
                            {
                                <li><a href="@(Url.Action("Index", new { page = Model.PageNumber + 1 }) + Model.FilterParamsQueryString)">&raquo;</a></li>
                            }
                        </ul>
                    </div>
                </div>
            }
        }
        else
        {
            <h3>No fighters found ...</h3>
        }
    </div>
</div>

<div id="registerPopupModal" class="modal fade">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
				<h3 class="modal-title text-center">Register for FREE!</h3>
				@Html.AntiForgeryToken()
			</div>
			<div class="modal-body">
				@{Html.RenderPartial("RegisterMain", new SparWeb.Models.RegisterMainViewModel() { IsPopupMode = true });}
			</div>
		</div>
	</div>
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/jquerycookie")
}

<script type="text/javascript">
    var filterParamsDict = [];
    @foreach(string key in Model.FilterParams.Keys)
    {
    @:filterParamsDict['@key'] = '@Model.FilterParams[key]';
    }

    $(function () {
        $('#search-filters').find('select').change(function () {
            applyFilter($(this));
        });

        $('#search-filters').find('.radioButtonFilter').find('input[type=radio]').click(function () {
            applyFilter($(this));
        });

        $('.clearFilter').click(function () {
            var id = null;
            id = $(this).parent().siblings('select').attr('id');
            if (!id)
                id = $(this).parent().siblings('input[type=hidden]').attr('id');
            if (!id)
                id = $(this).parent().siblings('input[type=radio]').attr('id');

            delete filterParamsDict[id];
            window.location.href = '@(Url.Action("Index"))' + getFilterParamsQueryString();
        });

    	setTimeout(showRegisterPopup, 7000);
    });

    function applyFilter(filterElement) {
        filterParamsDict[filterElement.attr('id')] = filterElement.val();
        window.location.href = '@(Url.Action("Index"))' + getFilterParamsQueryString();
    }

    function getFilterParamsQueryString() {
        var filterParamsQueryString = '';
        for (var key in filterParamsDict) {
            filterParamsQueryString += '&' + key + '=' + filterParamsDict[key];
        }
        if (filterParamsQueryString != '')
            filterParamsQueryString = '?' + filterParamsQueryString.substring(1);

        return filterParamsQueryString;
    }

    function showRegisterPopup() {
    	if (!$.cookie('registerPopupSeen')) {
    		$('#registerPopupModal').modal('show');
    		$.cookie('registerPopupSeen', '1', { expires: 30, path: '/' });
    	}
    }
</script>